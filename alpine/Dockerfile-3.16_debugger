FROM alpine:3.16

LABEL org.opencontainers.image.authors="EWZ Engineering <engineering@mytens.co.id>" \
      io.k8s.description="Alpine (3.16) GLIBC Debugger" \
      io.k8s.display-name="Alpine (3.16) GLIBC Debugger" \
      io.openshift.non-scalable="false" \
      io.openshift.tags="runner,alpine,glibc" \
      summary="Virtual Machine (VM) like container platform" \
      vendor="Alpine" \
      release="1"

ENV LANG="C.UTF-8" \
    LC_ALL="C.UTF-8" \
    TZ="Asia/Jakarta" \
    OC_VERSION="3.7.2" \
    HELM_VERSION="3.9.4"

WORKDIR /usr/src/app

# Install glibc
ENV GLIBC_VERSION="2.35-r0"
COPY install_glibc_alpine.sh .
RUN /bin/sh install_glibc_alpine.sh

RUN addgroup -S sudo; \
    adduser -s /bin/bash -D -u 1001 -G sudo admin; \
    apk add --no-cache \
        ca-certificates \
        curl \
        nano \
        rsync \
        sudo; \
    sed -i 's/# %sudo/%sudo/' /etc/sudoers; \
    sed -i 's/admin:!/admin:$6$nvznDih6zoZCta5A$VOUQNu6KWNi1d84MS5ziaZwWey53JSIC9PGy\/451xh3tbCdncL4Y9aBeLbmmGP19\/fw8JIfbKctLU1J0MEFIl0/g' /etc/shadow
RUN curl -Lo oc.tar.gz https://github.com/openshift/origin/releases/download/v${OC_VERSION}/openshift-origin-client-tools-v${OC_VERSION}-282e43f-linux-64bit.tar.gz; \
    sha256="abc89f025524eb205e433622e59843b09d2304cc913534c4ed8af627da238624"; \
    echo "${sha256}  oc.tar.gz" | sha256sum -c - || exit 1; \
    tar -xzpf oc.tar.gz; \
    cp openshift-origin-client-tools-v${OC_VERSION}-*/oc /usr/local/bin; \
    oc version || exit 1; \
    rm -rf \
        oc.tar.gz \
        openshift-origin-client-tools-v${OC_VERSION}-*
RUN case $(uname -m) in \
        x86_64) \
          ARCH=amd64; \
          ;; \
        armv7l) \
          ARCH=arm; \
          ;; \
        aarch64) \
          ARCH=arm64; \
          ;; \
        ppc64le) \
          ARCH=ppc64le; \
          ;; \
        s390x) \
          ARCH=s390x; \
          ;; \
        *) \
          echo "un-supported arch, exit ..."; \
          exit 1; \
          ;; \
    esac; \
    apk add --update --no-cache \
        git; \
    curl -Lo - https://get.helm.sh/helm-v${HELM_VERSION}-linux-${ARCH}.tar.gz | tar -xz; \
    mv linux-${ARCH}/helm /usr/local/bin/helm; \
    chmod +x /usr/local/bin/helm; \
    helm version || exit 1; \
    rm -rf linux-${ARCH}

# Custom configuration for Alpine Linux
COPY configure_alpine.sh .
RUN /bin/sh configure_alpine.sh

USER admin

ENTRYPOINT ["tail", "-f", "/dev/null"]

