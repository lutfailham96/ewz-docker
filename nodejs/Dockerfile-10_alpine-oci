FROM alpine:3.16

LABEL org.opencontainers.image.authors="EWZ Engineering <engineering@mytens.co.id>"
LABEL io.k8s.description="Alpine (3.16) OCI Node.js 10"
LABEL io.k8s.display-name="Alpine (3.16) OCI Node.js 10"
LABEL io.openshift.non-scalable="false"
LABEL io.openshift.tags="runner,builder,alpine,nodejs,glibc,oracle"
LABEL summary="Virtual Machine (VM) like container platform OCI with Node.js 10"
LABEL vendor="Alpine"
LABEL release="1"

ENV LANG="C.UTF-8" \
    LC_ALL="C.UTF-8" \
    TZ="Asia/Jakarta"

WORKDIR /usr/src/app

# Install glibc
ENV GLIBC_VERSION="2.35-r0"
COPY install_glibc_alpine.sh .
RUN /bin/sh install_glibc_alpine.sh

# Install instantclient
ENV INSTANT_CLIENT_VERSION="21.7.0" \
    ORACLE_BASE="/opt/oracle/instantclient" \
    ORACLE_HOME="/opt/oracle/instantclient" \
    TNS_ADMIN="/opt/oracle/instantclient" \
    LD_LIBRARY_PATH="/opt/oracle/instantclient:${LD_LIBRARY_PATH}" \
    PATH="/opt/oracle/instantclient:${PATH}"
COPY install_oci_alpine.sh .
RUN /bin/sh install_oci_alpine.sh

# Install Node.js
ENV NODE_VERSION="10.24.1"
COPY install_nodejs_alpine.sh .
RUN /bin/sh install_nodejs_alpine.sh

# Install yarn
ENV YARN_VERSION="1.22.5"
COPY install_yarn_alpine.sh .
RUN /bin/sh install_yarn_alpine.sh

# Custom configuration for Alpine Linux
COPY configure_alpine.sh .
RUN /bin/sh configure_alpine.sh

COPY docker-entrypoint.sh /usr/local/bin

ENTRYPOINT ["docker-entrypoint.sh"]

